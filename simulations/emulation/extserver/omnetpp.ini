[General]
scheduler-class = "inet::RealTimeScheduler"
cmdenv-express-mode = true
image-path=../../../images

output-scalar-file-append = false
sim-time-limit = 60s
network = simu5g.simulations.emulation.extserver.ExtServerExample

**.routingRecorder.enabled = false
**.networkConfiguratorModule = ""
**.fcsMode = "computed"
**.crcMode = "computed"

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}

################ Mobility parameters #####################
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numBands = 25 

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### eNodeB configuration #################
*.enb.mobility.initialX = 450m
*.enb.mobility.initialY = 300m

############## UE configuration ##################
# connect the UE's NIC to the corresponding serving eNB
*.ue*.macCellId = 1
*.ue*.masterId = 1

# UE position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 450m
*.ue*.mobility.initialY = 350m

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


############## Ext Interface configuration ##############
# equip the router with an External Ethernet interface 
*.router.numEthInterfaces = 1
*.router.eth[0].typename = "ExtLowerEthernetInterface"
*.router.eth[0].device = "veth0"


############## Routing configuration ##############
# configure routing tables of each network element. Each of them must include a route to the (real) client 
*.router.ipv4.routingTable.routingFile = "routing/router.mrt"
*.pgw.ipv4.routingTable.routingFile = "routing/pgw.mrt"
*.enb.ipv4.routingTable.routingFile = "routing/enb.mrt"
*.ue1.ipv4.routingTable.routingFile = "routing/ue1.mrt"
*.ue2.ipv4.routingTable.routingFile = "routing/ue2.mrt"




#########################################################################
# Configuration for downlink traffic from an external server.
# Use e.g. "Iperf" with following command line:
# 	iperf -c 10.0.0.1 -P 1 -i 1 -m -p 10021 -M 536.0B -l 1.0M -f m -t 0
[Config Downlink]

# ue1 receives from the external server
**.ue1.numApps = 1
**.ue1.app[*].typename = "TcpSinkApp"
**.ue1.app[*].localAddress = "10.0.0.1"
**.ue1.app[*].localPort = 10021


#########################################################################
# Configuration for uplink traffic to an external server.
# Use e.g. "Iperf" with following command line:
# 	iperf -s -P 1 -i 1 -p 10021
[Config Uplink]

# ue2 sends to the external server
**.ue2.numApps = 1
**.ue2.app[*].typename = "TcpSessionApp"
**.ue2.app[*].sendBytes = 2MiB
**.ue2.app[*].connectAddress = "192.168.2.2" # external server
**.ue2.app[*].connectPort = 10021            # external server
**.ue2.app[*].localAddress = "10.0.0.2"


################################################################################
# Configuration for downlink and uplink traffic from and to an external server.
# Use e.g. "Iperf" with following command line:
# 	iperf -s -P 1 -i 1 -p 10021
#   iperf -c 10.0.0.1 -P 1 -i 1 -m -p 10021 -M 536.0B -l 1.0M -f m -t 0
[Config Downlink_and_Uplink]

**.ue*.numApps = 1

# ue1 receives from the external server
**.ue1.app[*].typename = "TcpSinkApp"
**.ue1.app[*].localAddress = "10.0.0.1"
**.ue1.app[*].localPort = 10021

# ue2 sends to the external server
**.ue2.app[*].typename = "TcpSessionApp"
**.ue2.app[*].sendBytes = 2MiB
**.ue2.app[*].connectAddress = "192.168.2.2" # external server
**.ue2.app[*].connectPort = 10021            
**.ue2.app[*].localAddress = "10.0.0.2"
#------------------------------------#


