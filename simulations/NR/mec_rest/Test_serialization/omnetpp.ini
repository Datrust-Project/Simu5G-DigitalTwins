[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true
result-dir = 3car

##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
#**.sctp.**.scalar-recording = false
#**.sctp.**.vector-recording = false
#**.scalar-recording = true
#**.vector-recording = false
#**.routingRecorder.enabled = false



**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.eNodeB*.**.scalar-recording = true
**.eNodeB*.**.vector-recording = false

**.lteNic.**.scalar-recording = true
**.lteNic.**.vector-recording = false

**.pgw.**.scalar-recording = true
**.pgw.**.vector-recording = false


**.scalar-recording = false
**.vector-recording = true



##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 40s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = ${numBands=25}

*.*.lteNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.lteNic.numCarriers = 1
*.gNodeB1.lteNic.channelModel[0].componentCarrierIndex = 0
*.car[*].lteNic.numCarriers = 1
*.car[*].lteNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

*.car[*].mobility.initFromDisplayString = false
*.car[*].mobilityType = "LinearMobility"
*.car[*].mobility.updateInterval = 0.05s

*.gNodeB1.mobility.initFromDisplayString = true

**.numCars = 3
**.car[0].mobility.initialX = 180m
**.car[0].mobility.initialY = 50m
**.car[0].mobility.initialMovementHeading = 90deg
**.car[0].mobility.speed = 10mps

**.car[1].mobility.initialX = 180m
**.car[1].mobility.initialY = 100m
**.car[1].mobility.initialMovementHeading = 90deg
**.car[1].mobility.speed = 10mps

**.car[2].mobility.initialX = 180m
**.car[2].mobility.initialY = 150m
**.car[2].mobility.initialMovementHeading = 90deg
**.car[2].mobility.speed = 10mps

**.car[*].masterId = 1    
**.car[*].macCellId = 1   
**.car[*].nrMasterId = 1
**.car[*].nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

**.hasRNISupport = true
##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

#------------UEWarningAlertApp---------------
*.car[*].numApps = 0
*.car[*].app[0].typename = "DeviceApp"
*.car[*].app[0].localPort = 4500
*.car[*].app[0].lcmProxyAddress = "lcmProxy"
*.car[*].app[0].lcmProxyPort = 1000



*.car[*].app[0].startTime = 0s										#when sending start warning alert app									#period to sending messages
*.car[*].app[0].stopTime = 40s										#when sending stop MEC warning alert app
*.car[*].app[0].connectAddress = "lcmProxy"

*.car[*].app[1].typename = "UEWarningAlertApp_rest"
*.car[*].app[1].destAddress = "car["+string(ancestorIndex(1))+"]"
*.car[*].app[1].destPort = 4500
*.car[*].app[1].startTime = 2s										#when sending start warning alert app									#period to sending messages
*.car[*].app[1].stopTime = 40s										#when sending stop MEC warning alert app
*.car[*].app[1].connectAddress = "lcmProxy"



#*.car[*].app[0].requiredRam = 10MB
#*.car[*].app[0].requiredDisk = 10MB
#*.car[*].app[0].requiredCpu = 0.01
#----------------------------------------

######################_ME Host Side_#####################
# resources available
*.meHost.maxMEApps = 100												#max ME Apps to instantiate
*.meHost.maxRam = 32GB													#max KBytes of Ram Space 
*.meHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.meHost.maxCpuSpeed = 400000											#max percentage of CPU
#----------------------------------------


#-------REST Service:---------------

*.meHost.mecPlatform.numRESTServices = 1
*.meHost.mecPlatform.app[0].typename = "RNIService"
*.meHost.mecPlatform.app[0].localAddress = "meHost.mecPlatform" #da cambiare!!
*.meHost.mecPlatform.app[0].localPort = 10020

*.meHost.mecPlatform.app[0].rng-0 = 0 # request service time
*.meHost.mecPlatform.app[0].rng-1 = 1 # subscription service time
*.meHost.mecPlatform.app[0].requestServiceTime = 20
*.meHost.mecPlatform.app[0].subscriptionServiceTime = 11s

*.meHost.mecPlatform.serviceRegistry.localAddress = "meHost.mecPlatform" #da cambiare!!
*.meHost.mecPlatform.serviceRegistry.localPort = 10021

*.meHost.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.meHost.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time


# ME Host connected
**.gNodeB*.meHost = "meHost"
# ----------------------------------------------------------------------------- #

# ----------------------------------------------------------------------------- #
# Config "Test"
#
[Config Test]
network = lte.simulations.NR.mec_rest.Test_serialization.MecSingleCell_test_serialization


[Config BGRGApp]
extends = Test
**.numBGMecApp = 2

*.meHost.bgApp[0].typename = "MecRequestForegroundApp"
*.meHost.bgApp[0].connectAddress = "meHost.mecPlatform"
*.meHost.bgApp[0].connectPort = 10020
*.meHost.bgApp[0].localPort = 10023 + ancestorIndex(0)


*.meHost.bgApp[1].typename = "MecRequestBackgroundGeneratorApp"
*.meHost.bgApp[1].numberOfApplications = 600
*.meHost.bgApp[1].connectAddress = "meHost.mecPlatform"
*.meHost.bgApp[1].connectPort = 10020
*.meHost.bgApp[1].localPort = 10023 + ancestorIndex(0)

[Config BGApp]
extends = Test
**.numBGMecApp = 1+0

*.meHost.bgApp[0].typename = "MecRequestForegroundApp"
*.meHost.bgApp[0].connectAddress = "meHost.mecPlatform"
*.meHost.bgApp[0].connectPort = 10020
*.meHost.bgApp[0].localPort = 10023 + ancestorIndex(0)


*.meHost.bgApp[1..].typename = "MecRequestBackgroundApp"
*.meHost.bgApp[1..].connectAddress = "meHost.mecPlatform"
*.meHost.bgApp[1..].connectPort = 10020
*.meHost.bgApp[1..].localPort = 10023 + ancestorIndex(0)

[Config Get]
extends = Test
**.numBGMecApp = 1
*.meHost.bgApp[0].typename = "MeAppGet"
*.meHost.bgApp[0].uri = "/example/rni/v2/queries/layer2_meas"
*.meHost.bgApp[0].connectAddress = "meHost.mecPlatform"
*.meHost.bgApp[0].connectPort = 10020
*.meHost.bgApp[0].localPort = 10023 + ancestorIndex(0)

#