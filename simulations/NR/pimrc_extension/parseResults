#!/bin/bash


RBS=50
SNDINT=40

if [[ $1 != "noexport" ]] 
then

    # ===== EXPORT SCALARS ===== #
    echo "--> Exporting scalars..."

    for MU in 0 1 2 3 4; do
        for BKUES in `seq 0 19`; do
            # option -T must be set to s if scalar, v if vector, t if statistics 
            opp_scavetool export -f 'module =~ "*.ue.app[0]" AND name =~ "rcvdPkLifetime:stats"' -F 'CSV-S' -T t -o stats/sca_rtt_ca=1-u=${MU}-rbs=${RBS}-msgLen=1000B-sndInt=${SNDINT}ms-bkUEs=${BKUES}.csv results/*/*u=${MU}-rbs=${RBS}-msgLen=1000B-sndInt=${SNDINT}ms-bkUEs=${BKUES}-*.sca
        done
    done
    echo "--> done"
fi
# ==================== #

# ==== PARSE FILES ==== #

echo "--> Parsing extracted scalars..."
OUTPUTFOLDER="stats"

for CA in 1; do
    for METRIC in rtt; do
        # define output file
        OUTPUTFILE=${OUTPUTFOLDER}/avg_${METRIC}-ca=${CA}.csv

        # print header
        HEADER="v Background UEs | Numerology >\t0\t0-conf\t1\t1-conf\t2\t2-conf\t3\t3-conf\t4\t4-conf\n"
        printf "$HEADER" > $OUTPUTFILE

        for BKUES in `seq 0 19`; do
            printf "${BKUES}" >> $OUTPUTFILE
            for MU in 0 1 2 3 4; do

                # get avg and conf int
                INPUTFILE="${OUTPUTFOLDER}/sca_${METRIC}_ca=${CA}-u=${MU}-rbs=${RBS}-msgLen=1000B-sndInt=${SNDINT}ms-bkUEs=${BKUES}.csv"
                printf "\t" >> $OUTPUTFILE;
                ./stats_avg.pl -file $INPUTFILE >> $OUTPUTFILE
            done
            printf "\n" >> $OUTPUTFILE
        done
    done
done


echo "--> done"
# ==================== #

# ===== PLOT ALL ======= #
echo "--> Plotting charts..."
./plot.gpl 
# ====================== #

echo "--> End"
