[General]
cmdenv-express-mode = true
image-path=../../../images
output-scalar-file-append = false
network = lte.simulations.NR.pimrc_extension.ClientServerExample

**.routingRecorder.enabled = false
**.networkConfiguratorModule = ""
**.fcsMode = "computed"
**.crcMode = "computed"

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = false
################ Mobility parameters #####################
# *

**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Phy layer parameters ################
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40 

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### eNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 1
*.ue*.masterId = 1
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 450m
*.ue*.mobility.initialY = 350m

*.bkUe[*].macCellId = 1
*.bkUe[*].masterId = 1
*.bkUe[*].nrMacCellId = 1
*.bkUe[*].nrMasterId = 1

# ue position
*.bkUe[*].mobilityType = "StationaryMobility"
*.bkUe[*].mobility.initialX = uniform(150m,450m)
*.bkUe[*].mobility.initialY = uniform(0m,600m)

############### CA configuration ######################## 
*.carrierAggregation.numComponentCarriers = ${ca=1}
*.carrierAggregation.componentCarrier[*].numerologyIndex = ${u=0,1,2,3,4}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[1].carrierFrequency = 700MHz
*.carrierAggregation.componentCarrier[2].carrierFrequency = 6GHz
*.carrierAggregation.componentCarrier[*].numBands = ${rbs=25,50,100}

*.gnb.lteNic.numCarriers = ${ca}
*.gnb.lteNic.channelModel[*].componentCarrierIndex = ancestorIndex(0)
*.ue.lteNic.numNRCarriers = 1
*.ue.lteNic.nrChannelModel[0].componentCarrierIndex = 0
*.bkUe[*].lteNic.numNRCarriers = 1
*.bkUe[*].lteNic.nrChannelModel[0].componentCarrierIndex = ancestorIndex(2) % ${ca}


############## Routing configuration ##############
# configure routing tables of each network element
*.server.ipv4.routingTable.routingFile = "routing/server.mrt"
*.router.ipv4.routingTable.routingFile = "routing/router.mrt"
*.natRouter.ipv4.routingTable.routingFile = "routing/natRouter.mrt"
*.upf.ipv4.routingTable.routingFile = "routing/upf.mrt"
*.gnb.ipv4.routingTable.routingFile = "routing/gnb.mrt"
*.ue.ipv4.routingTable.routingFile = "routing/ue.mrt"
*.bkUe[*].ipv4.routingTable.routingFile = "routing/bkUe"+string(ancestorIndex(2))+".mrt"


############# NAT configuration #################
#*.natRouter.ipv4.natTable.config = xml("<config> \
#                                        <entry type='prerouting' \
#                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.2.1' \
#                                        srcAddress='10.0.3.2' destAddress='10.0.4.2'/> \
#                                        <entry type='prerouting' \
#                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.3.2' \
#                                        srcAddress='10.0.4.2' destAddress='10.0.0.1'/> \
#                                     </config>")


#
# This configuration uses UDP traffic
#
[Config ClientServer-UDP]
sim-time-limit = 121s
warmup-period = 1s
repeat = 10

*.numBkUEs = ${numBkUEs=0..19}

############# Traffic configuration #################
*.ue.numApps = 1
*.bkUe[*].numApps = 1
*.server.numApps = 1 + ${numBkUEs}

*.server.app[*].typename = "UdpEchoApp"
*.server.app[*].localPort = 5000+ancestorIndex(0)

*.ue.app[*].typename = "UdpBasicApp"
*.ue.app[*].destAddresses = "10.0.4.2" 
*.ue.app[*].destPort = 5000+ancestorIndex(0)
*.ue.app[*].localPort = 6000+ancestorIndex(0)
*.ue.app[*].startTime = uniform(0s,0.02s)
*.ue.app[*].messageLength = ${msgLen=1000B}
*.ue.app[*].sendInterval = ${sndInt=40ms}   # 200/400/800 kbps

*.bkUe[*].app[*].typename = "UdpBasicApp"
*.bkUe[*].app[*].destAddresses = "10.0.4.2" 
*.bkUe[*].app[*].destPort = 5000+ancestorIndex(1)+1
*.bkUe[*].app[*].localPort = 6000+ancestorIndex(0)
*.bkUe[*].app[*].startTime = uniform(0s,0.02s)
*.bkUe[*].app[*].messageLength = ${msgLen}
*.bkUe[*].app[*].sendInterval = ${sndInt}   # 200/400/800 kbps


output-scalar-file = ${resultdir}/${configname}/ca=${ca}-u=${u}-rbs=${rbs}-msgLen=${msgLen}-sndInt=${sndInt}-bkUEs=${numBkUEs}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/ca=${ca}-u=${u}-rbs=${rbs}-msgLen=${msgLen}-sndInt=${sndInt}-bkUEs=${numBkUEs}-${repetition}.vec

#------------------------------------#
