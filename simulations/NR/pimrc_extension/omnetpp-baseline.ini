[General]
cmdenv-express-mode = true
image-path=../../../images
output-scalar-file-append = false
seed-set = ${repetition}

**.bgUE[*].generator.**.vector-recording = true
**.nrPhy.**.vector-recording = true
**.vector-recording = false

**.routingRecorder.enabled = false
**.networkConfiguratorModule = ""
#**.fcsMode = "computed"
#**.crcMode = "computed"
# *

**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Phy layer parameters ################
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40 

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### eNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 1
*.ue*.masterId = 1
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 450m
*.ue*.mobility.initialY = 350m

*.bkUe[*].macCellId = 1
*.bkUe[*].masterId = 1
*.bkUe[*].nrMacCellId = 1
*.bkUe[*].nrMasterId = 1

# ue position
*.bkUe[*].mobilityType = "StationaryMobility"
*.bkUe[*].mobility.initialX = uniform(150m,750m)
*.bkUe[*].mobility.initialY = uniform(0m,600m)




#############################################################################
# Baseline-SingleUe
#
# This scenario is used to compare the results obtained in a single-cell, 
# single-user scenario with the same scenario where the UE is a real one
# 
[Config Baseline-SingleUe]
network = simu5g.simulations.NR.pimrc_extension.ClientServerExample

sim-time-limit = 121s
warmup-period = 1s
repeat = 10

############### CA configuration ######################## 
*.carrierAggregation.numComponentCarriers = ${ca=1}
*.carrierAggregation.componentCarrier[*].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[*].numBands = ${rbs=100}

*.gnb.cellularNic.numCarriers = ${ca}
*.gnb.cellularNic.channelModel[*].componentCarrierIndex = ancestorIndex(0)
*.ue.cellularNic.numNRCarriers = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0


*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m
*.ue*.mobility.initialX = 450m
*.ue*.mobility.initialY = 350m


############# Traffic configuration #################
*.ue.numApps = 1
*.server.numApps = 1

*.server.app[*].typename = "UdpEchoApp"
*.server.app[*].localPort = 5000+ancestorIndex(0)

*.ue.app[*].typename = "UdpBasicApp"
*.ue.app[*].destAddresses = "10.0.4.2" 
*.ue.app[*].destPort = 5000+ancestorIndex(0)
*.ue.app[*].localPort = 6000+ancestorIndex(0)
*.ue.app[*].startTime = uniform(0s,0.02s)
*.ue.app[*].messageLength = ${msgLen=1000B}
*.ue.app[*].sendInterval = ${sndInt=40ms,20ms,10ms,5ms}   # 200,400,800,1600 kbps


############## Routing configuration ##############
# configure routing tables of each network element
*.server.ipv4.routingTable.routingFile = "routing/server.mrt"
*.router.ipv4.routingTable.routingFile = "routing/router.mrt"
*.natRouter.ipv4.routingTable.routingFile = "routing/natRouter.mrt"
*.upf.ipv4.routingTable.routingFile = "routing/upf.mrt"
*.gnb.ipv4.routingTable.routingFile = "routing/gnb.mrt"
*.ue.ipv4.routingTable.routingFile = "routing/ue.mrt"
*.bkUe[*].ipv4.routingTable.routingFile = "routing/bkUe"+string(ancestorIndex(2))+".mrt"


output-scalar-file = ${resultdir}/${configname}/ca=${ca}-u=${u}-rbs=${rbs}-msgLen=${msgLen}-sndInt=${sndInt}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/ca=${ca}-u=${u}-rbs=${rbs}-msgLen=${msgLen}-sndInt=${sndInt}-${repetition}.vec

#------------------------------------#





