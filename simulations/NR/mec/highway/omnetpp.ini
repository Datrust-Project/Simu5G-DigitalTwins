[General]
network = rtp_network_highway
image-path=../../../images
output-scalar-file-append = false
sim-time-limit= 120s
total-stack = 28MiB

**.routingRecorder.enabled = false
repeat = 12

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}_numUe_${numUes}_bgUes_${numBgUEs}_u_${u}_sched_${sched}_rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_numUe_${numUes}_bgUes_${numBgUEs}_u_${u}_sched_${sched}_rep_${repetition}.vec

seed-set = ${repetition}

**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP

**.ue[*].**.vector-recording = true

**.vector-recording = true

############# Floorplan definition ##################
**.ue[*].mobility.constraintAreaMaxX = 1750m
**.ue[*].mobility.constraintAreaMaxY = 1683m
**.ue[*].mobility.constraintAreaMinX = 250m
**.ue[*].mobility.constraintAreaMinY = 317m
**.mobility.constraintAreaMaxX = 3000m
**.mobility.constraintAreaMaxY = 3000m
**.mobility.constraintAreaMinX = -250m
**.mobility.constraintAreaMinY = -250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numBands = 100 # this value should be kept equal to the number of RBs
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u = 0}

# Schedulers
**.mac.schedulingDisciplineDl = ${sched = "PF", "MAXCI"}
**.mac.schedulingDisciplineUl = ${sched}

############### Transmission Power ##################
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


###############  network configuration #################
*.gnb1.mobility.initialX = 1000m
*.gnb1.mobility.initialY = 1000m


*.gnb3.mobility.initialX = 1500m
*.gnb3.mobility.initialY = 1000m

*.gnb2.mobility.initialX = 500m
*.gnb2.mobility.initialY = 1000m


# --- Background UEs in the central cell --- #

# the central gNB has a number of background UEs

*.gnb*.cellularNic.bgTrafficGenerator[0].numBgUes = ${numBgUEs=10, 15}

# position of background UEs in the cells
*.gnb1.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb1.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

*.gnb2.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(500m,1000m)
*.gnb2.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(317m,817m)

*.gnb3.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.gnb3.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)



# --- Background UEs in the central cell --- #
*.gnb*.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true  
*.gnb*.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = ${probCqi=false} 
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = 500B
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = 0.01s


################# BackGround cells
*.numBgCells = ${numBgCells=10}

*.bgCell[*].bgTrafficGenerator.numBgUes = ${numBgUEs}

# position of background UEs in the background cells
**.bgCell[1].mobility.initialX = 1750.0m
**.bgCell[1].mobility.initialY = 1433.01m
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1500m,2000m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1683m)

**.bgCell[2].mobility.initialX = 1750.0m
**.bgCell[2].mobility.initialY = 566.99m
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1500m,2000m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m, 817m)

**.bgCell[3].mobility.initialX = 750m
**.bgCell[3].mobility.initialY = 567m
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1616m,2116m)

**.bgCell[4].mobility.initialX = 2000.0m
**.bgCell[4].mobility.initialY = 1000.0m
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1750m,2250m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)

**.bgCell[5].mobility.initialX = 250.0m
**.bgCell[5].mobility.initialY = 566.99m
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(0m,500m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)

**.bgCell[6].mobility.initialX = 1250m
**.bgCell[6].mobility.initialY = 567m
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(750m,1250m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1616m,2116m)

**.bgCell[7].mobility.initialX = 750.0m
**.bgCell[7].mobility.initialY = 1433.02m
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1616m,2116m)

**.bgCell[8].mobility.initialX = 1250.0m
**.bgCell[8].mobility.initialY = 1433m
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-117m,383m)

**.bgCell[9].mobility.initialX = 0.0m
**.bgCell[9].mobility.initialY = 1000.0m
*.bgCell[9].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(-250m,250m)
*.bgCell[9].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)

**.bgCell[0].mobility.initialX = 250m
**.bgCell[0].mobility.initialY = 1433m
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(750m,1250m)
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-116m,384m)



# --- Background UEs in the background cells --- #
*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = false
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 500B
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 0.05s



############### X2 configuration #################

######### Peering configuration ####################################################

*.gnb1.numX2Apps = 2    # one x2App 
*.gnb1.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb1.x2App[1].client.connectAddress = "gnb3%x2ppp0"



*.gnb2.numX2Apps = 2    # one x2App 
*.gnb2.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp1"



*.gnb3.numX2Apps = 2    # one x2App 
*.gnb3.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb3.x2App[0].client.connectAddress = "gnb1%x2ppp1"
*.gnb3.x2App[1].client.connectAddress = "gnb2%x2ppp1"



**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false	


############### enable handover #################
**.enableHandover = true
**.dynamicCellAssociation = true  # at initialize the ue connects to the best cell (based on power)

########### MEC system configuratio #############
*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecOrchestrator.mecHostList = "mecHost"




############### UE configuration #################
**.numUe = ${numUes = 30}

# connect the UE's NIC to the corresponding serving eNB
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

# UE position


#*.ue[0].mobilityType = "TractorMobility"
#*.ue[0].mobility.speed = 27.7mps
#*.ue[0].mobility.x1 = 300m
#*.ue[0].mobility.y1 = 300m
#*.ue[0].mobility.x2 = 1800m
#*.ue[0].mobility.y2 = 1800m
#*.ue[0].mobility.rowCount = 5
*.ue[0..14].mobility.initialY = 850m
*.ue[0..14].mobility.initialMovementHeading = 0deg
*.ue[15..].mobility.initialY = 853m
*.ue[15..].mobility.initialMovementHeading = 0deg


*.ue[*].mobilityType = "LinearMobility"
*.ue[*].mobility.speed = uniform(13.8mps, 41.7mps)

## cqi update by the ues
#**.fbPeriod = 40

## debug (con giovanni)
**.downlink_interference = true


