In this example the network consists of two UEs connected to one gNB, one UPF, 
one router and one external (real) server.

For downlink traffic the external server sends 2MB to ue1 using TCP.
For uplink traffic, ue2 sends 2MB to the external server using TCP.

To run this example, you have to run the external server(s):

- For downlink traffic use e.g. "Iperf" with following command line:
  	iperf -c 10.0.0.1 -P 1 -i 1 -m -p 10021 -M 536.0B -l 2.0M -f m -t 0
- For uplink traffic use e.g. "Iperf" with the following command line:
  	iperf -s -P 1 -i 1 -p 10021

IP addresses and routing tables are set up by using mrt files (see "routing" folder).
 
 
=== HOW TO BUILD AND RUN ===

1) Make sure that the emulation feature is enabled in the INET project:

- via the IDE: right-click on the 'inet' folder in the Project Explorer -> Properties;
               select OMNeT++ -> Project Features; 
               tick the box "Network emulation support".
- via the command line: in the root INET folder, type 'opp_featuretool enable NetworkEmulationSupport'.

  If the feature was disabled, recompile INET with the command 'make' (in the root INET folder).  


2) In order to be able to send/receive packets through sockets, set the application permissions: 

    sudo setcap cap_net_raw,cap_net_admin=eip path/to/opp_run
    sudo setcap cap_net_raw,cap_net_admin=eip path/to/opp_run_dbg
    sudo setcap cap_net_raw,cap_net_admin=eip path/to/opp_run_release


3) Compile Simu5G from the command line by running (in the root Simu5G folder):
    $ . setenv
    $ make makefiles
    $ make 
            
            
4) Run the simulation by launching the script ./run.sh 

============================
