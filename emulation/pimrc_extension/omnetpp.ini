[General]
scheduler-class = "inet::RealTimeScheduler"
cmdenv-express-mode = true
image-path=../../../images
output-scalar-file-append = false
sim-time-limit = 130s

**.routingRecorder.enabled = false
**.networkConfiguratorModule = ""
**.fcsMode = "computed"
**.crcMode = "computed"

############### Statistics ##################
**.scalar-recording = false
**.vector-recording = false
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}

################ Mobility parameters #####################
# *

**.mobility.constraintAreaMaxX = 2500m
**.mobility.constraintAreaMaxY = 2500m
**.mobility.constraintAreaMinX = -500m
**.mobility.constraintAreaMinY = -500m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Phy layer parameters ################
**.amcType = "NRAmc"
**.pilotMode = "AVG_CQI" 
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40 

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")



# Single Cell configuration
# 
# The cell has a number of simulated UEs loading the cell itself
[Config SingleCell]
network = simu5g.emulation.pimrc_extension.ExtClientServerExample


############### eNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 1
*.ue*.masterId = 1
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 450m
*.ue*.mobility.initialY = 300m + ${dist=50m}

############### CA configuration ######################## 
#*.carrierAggregation.numComponentCarriers = 1
#*.carrierAggregation.componentCarrier[0].numerologyIndex = 0
#*.carrierAggregation.componentCarrier[0].numBands = 10
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[1].carrierFrequency = 4GHz
*.carrierAggregation.componentCarrier[2].carrierFrequency = 6GHz
*.carrierAggregation.componentCarrier[3].carrierFrequency = 8GHz

include scenario.ini

*.gnb.cellularNic.numCarriers = ${ca}
*.gnb.cellularNic.channelModel[*].componentCarrierIndex = ancestorIndex(0)
*.ue.cellularNic.numNRCarriers = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.bkUe[*].cellularNic.numNRCarriers = 1
*.bkUe[*].cellularNic.nrChannelModel[*].componentCarrierIndex = ancestorIndex(2) % ${ca}   # distribute bkUes uniformly among CCs

############## background ues configuration ##################
*.bkUe[*].macCellId = 1
*.bkUe[*].masterId = 1
*.bkUe[*].nrMacCellId = 1
*.bkUe[*].nrMasterId = 1

# background ue position
*.bkUe[*].mobilityType = "StationaryMobility"
*.bkUe[*].mobility.initialX = uniform(150m,750m)
*.bkUe[*].mobility.initialY = uniform(0m,600m)


############# Traffic configuration #################
*.bkUe[*].numApps = 1
*.server.numApps = ${numBkUEs}

*.server.app[*].typename = "UdpEchoApp"
*.server.app[*].localPort = 5000+ancestorIndex(0)

*.bkUe[*].app[*].typename = "UdpBasicApp"
*.bkUe[*].app[*].destAddresses = "10.0.4.2" 
*.bkUe[*].app[*].destPort = 5000+ancestorIndex(1)
*.bkUe[*].app[*].localPort = 6000+ancestorIndex(0)
*.bkUe[*].app[*].startTime = uniform(0s,0.02s)
*.bkUe[*].app[*].messageLength = ${msgLen=1000B}


############### PCAP recorders ###########################
*.natRouter.numPcapRecorders = 1 
*.router.numPcapRecorders = 1
*.natRouter.pcapRecorder[0].pcapFile = "natrouter.pcap"
*.router.pcapRecorder[0].pcapFile = "router.pcap"



#
# This configuration uses sockets to exchange packets with the real world 
#
[Config ExtClientServer_Socket]
extends=SingleCell

############## Routing configuration ##############
# configure routing tables of each network element. Each of them must include a route to the (real) client 
*.server.ipv4.routingTable.routingFile = "routing_wSocket/server.mrt"
*.router.ipv4.routingTable.routingFile = "routing_wSocket/router.mrt"
*.natRouter.ipv4.routingTable.routingFile = "routing_wSocket/natRouter.mrt"
*.upf.ipv4.routingTable.routingFile = "routing_wSocket/upf.mrt"
*.gnb.ipv4.routingTable.routingFile = "routing_wSocket/gnb.mrt"
*.ue.ipv4.routingTable.routingFile = "routing_wSocket/ue.mrt"
*.bkUe[*].ipv4.routingTable.routingFile = "routing_wSocket/bkUe" + string(ancestorIndex(2)) + ".mrt"


############# NAT configuration #################
*.natRouter.ipv4.natTable.config = xml("<config> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.2.1' \
                                        srcAddress='10.0.3.2' destAddress='192.168.2.2'/> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.3.2' \
                                        srcAddress='10.0.2.1' destAddress='192.168.3.2'/> \
                                     </config>")

############## Ext Interface configuration ##############
# equip the router with an External Ethernet interface 
*.router.numEthInterfaces = 1
*.router.eth[0].typename = "ExtLowerEthernetInterface"
*.router.eth[0].device = "veth0"

*.ue.numEthInterfaces = 1
*.ue.eth[0].typename = "ExtLowerEthernetInterface"
*.ue.eth[0].device = "veth2"
*.ue.extHostAddress = "192.168.3.2"
*.ue.ipv4.forwarding = true



# In this configuration, the cell has a number of bgUEs 
#
[Config ExtClientServer_Socket-backgroundUes]
extends=ExtClientServer_Socket

############# Background traffic configuration #################
**.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(150m,750m)
**.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(0m,600m)
**.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
**.bgTrafficGenerator[0].useRandomCqi = ${randomCqi=true}
**.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.02s)
**.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.02s)
**.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = ${msgLen}
**.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = ${msgLen}
**.bgTrafficGenerator[0].bgUE[*].generator.periodDl = ${sndInt}
**.bgTrafficGenerator[0].bgUE[*].generator.periodUl = ${sndInt}
include trafficGeneratorConfig.ini





# Multi Cell configuration
# 
# The central cell is surrounded by one tier of gNBs. Each surrounding
# gNB has a number of bgUEs
[Config MultiCell]
network = simu5g.emulation.pimrc_extension.ExtClientServerMulticell

**.downlink_interference = true
**.uplink_interference = true

############### gNodeBs configuration #################
*.gnb.mobility.initialX = 1000m
*.gnb.mobility.initialY = 1000m
*.bgGnb[0].mobility.initialX = 750m
*.bgGnb[0].mobility.initialY = 567m
*.bgGnb[1].mobility.initialX = 1500m
*.bgGnb[1].mobility.initialY = 1000m
*.bgGnb[2].mobility.initialX = 750m
*.bgGnb[2].mobility.initialY = 1433m
*.bgGnb[3].mobility.initialX = 1250m
*.bgGnb[3].mobility.initialY = 567m
*.bgGnb[4].mobility.initialX = 1250m
*.bgGnb[4].mobility.initialY = 1433m
*.bgGnb[5].mobility.initialX = 500m
*.bgGnb[5].mobility.initialY = 1000m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 0
*.ue*.masterId = 0
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 1000m
*.ue*.mobility.initialY = 1050m

############### CA configuration ######################## 
*.carrierAggregation.numComponentCarriers = 1
#*.carrierAggregation.componentCarrier[0].numerologyIndex = 0
#*.carrierAggregation.componentCarrier[0].numBands = 10
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz

include scenario_multicell.ini

*.gnb.cellularNic.numCarriers = 1
*.gnb.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue.cellularNic.numNRCarriers = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

*.bgGnb[*].cellularNic.numCarriers = 1
*.bgGnb[*].cellularNic.channelModel[0].componentCarrierIndex = 0


############# Background traffic configuration #################
**.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
**.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.02s)
**.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.02s)
**.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = ${msgLen=1000B}
**.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = ${msgLen}
**.bgTrafficGenerator[0].bgUE[*].generator.periodDl = ${sndInt=0.04s}
**.bgTrafficGenerator[0].bgUE[*].generator.periodUl = ${sndInt}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

*.bgGnb[0].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgGnb[0].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgGnb[1].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgGnb[1].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgGnb[2].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgGnb[2].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1183m,1933m)
*.bgGnb[3].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgGnb[3].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgGnb[4].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgGnb[4].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1183m,1933m)
*.bgGnb[5].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgGnb[5].cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)


#
# This configuration uses sockets to exchange packets with the real world 
#
[Config ExtClientServerMulticell_Socket]
extends=MultiCell

############## Routing configuration ##############
# configure routing tables of each network element. Each of them must include a route to the (real) client 
*.server.ipv4.routingTable.routingFile = "routing_wSocket/server.mrt"
*.router.ipv4.routingTable.routingFile = "routing_wSocket/router.mrt"
*.natRouter.ipv4.routingTable.routingFile = "routing_wSocket/natRouter.mrt"
*.upf.ipv4.routingTable.routingFile = "routing_wSocket/upf_multicell.mrt"
*.gnb.ipv4.routingTable.routingFile = "routing_wSocket/gnb.mrt"
*.bgGnb[*].ipv4.routingTable.routingFile = "routing_wSocket/bgGnb" + string(ancestorIndex(2)) + ".mrt"
*.ue.ipv4.routingTable.routingFile = "routing_wSocket/ue.mrt"


############# NAT configuration #################
*.natRouter.ipv4.natTable.config = xml("<config> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.2.1' \
                                        srcAddress='10.0.3.2' destAddress='192.168.2.2'/> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.3.2' \
                                        srcAddress='10.0.2.1' destAddress='192.168.3.2'/> \
                                     </config>")

############## Ext Interface configuration ##############
# equip the router with an External Ethernet interface 
*.router.numEthInterfaces = 1
*.router.eth[0].typename = "ExtLowerEthernetInterface"
*.router.eth[0].device = "veth0"

*.ue.numEthInterfaces = 1
*.ue.eth[0].typename = "ExtLowerEthernetInterface"
*.ue.eth[0].device = "veth2"
*.ue.extHostAddress = "192.168.3.2"
*.ue.ipv4.forwarding = true


# Multi Cell configuration
# 
# The central cell is surrounded by one tier of gNBs. Each surrounding
# gNB has a number of bgUEs
[Config MultiCellBackground]
network = simu5g.emulation.pimrc_extension.ExtClientServerMulticell2
num-rngs = 2

**.downlink_interference = false
**.uplink_interference = false
**.bgCell_interference = true
**.extCell_interference = false
**.fading = false
**.shadowing = false

############### gNodeBs configuration #################
*.gnb.mobility.initialX = 1000m
*.gnb.mobility.initialY = 1000m
*.bgCell[0].mobility.initialX = 750m
*.bgCell[0].mobility.initialY = 567m
*.bgCell[1].mobility.initialX = 1500m
*.bgCell[1].mobility.initialY = 1000m
*.bgCell[2].mobility.initialX = 750m
*.bgCell[2].mobility.initialY = 1433m
*.bgCell[3].mobility.initialX = 1250m
*.bgCell[3].mobility.initialY = 567m
*.bgCell[4].mobility.initialX = 1250m
*.bgCell[4].mobility.initialY = 1433m
*.bgCell[5].mobility.initialX = 500m
*.bgCell[5].mobility.initialY = 1000m
*.bgCell[6].mobility.initialX = 500m
*.bgCell[6].mobility.initialY = 134m
*.bgCell[7].mobility.initialX = 2000m
*.bgCell[7].mobility.initialY = 1000m
*.bgCell[8].mobility.initialX = 500m
*.bgCell[8].mobility.initialY = 1866m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 0
*.ue*.masterId = 0
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 1000m
*.ue*.mobility.initialY = 1005m

############### CA configuration ######################## 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz

include scenario_multicell.ini

*.gnb.cellularNic.numCarriers = 1
*.gnb.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue.cellularNic.numNRCarriers = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

*.bgCell[*].bgBaseStation.isNr = true
*.bgCell[*].bgBaseStation.numBands = ${rbs}
*.bgCell[*].bgBaseStation.carrierFrequency = 2GHz
*.bgCell[*].bgBaseStation.numerologyIndex = ${u}

**.bgUE[*].mobility.rng-0 = 1

############# Background traffic configuration #################
*.gnb.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb.cellularNic.bgTrafficGenerator[0].useRandomCqi = ${randomCqi=true}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.5s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.5s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = ${msgLen=1000B}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = ${msgLen}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = ${sndInt=0.04s}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodUl = ${sndInt}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useRandomCqi = ${randomCqi}
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.5s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeUl = uniform(0s,0.5s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeUl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = ${sndInt}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodUl = ${sndInt}
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1933m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1933m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-116m,384m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1750m,2250m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1683m)

include trafficGeneratorConfig.ini


#
# This configuration uses sockets to exchange packets with the real world 
#
[Config ExtClientServerMulticellBackground_Socket]
extends=MultiCellBackground

############## Routing configuration ##############
# configure routing tables of each network element. Each of them must include a route to the (real) client 
*.server.ipv4.routingTable.routingFile = "routing_wSocket/server.mrt"
*.router.ipv4.routingTable.routingFile = "routing_wSocket/router.mrt"
*.natRouter.ipv4.routingTable.routingFile = "routing_wSocket/natRouter.mrt"
*.upf.ipv4.routingTable.routingFile = "routing_wSocket/upf.mrt"
*.gnb.ipv4.routingTable.routingFile = "routing_wSocket/gnb.mrt"
*.ue.ipv4.routingTable.routingFile = "routing_wSocket/ue.mrt"


############# NAT configuration #################
*.natRouter.ipv4.natTable.config = xml("<config> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.2.1' \
                                        srcAddress='10.0.3.2' destAddress='192.168.2.2'/> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.3.2' \
                                        srcAddress='10.0.2.1' destAddress='192.168.3.2'/> \
                                     </config>")

############## Ext Interface configuration ##############
# equip the router with an External Ethernet interface 
*.router.numEthInterfaces = 1
*.router.eth[0].typename = "ExtLowerEthernetInterface"
*.router.eth[0].device = "veth0"

*.ue.numEthInterfaces = 1
*.ue.eth[0].typename = "ExtLowerEthernetInterface"
*.ue.eth[0].device = "veth2"
*.ue.extHostAddress = "192.168.3.2"
*.ue.ipv4.forwarding = true

