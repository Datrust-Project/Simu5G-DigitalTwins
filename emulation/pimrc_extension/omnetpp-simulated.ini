[General]
cmdenv-express-mode = true
image-path=../../../images
output-scalar-file-append = false
seed-set = ${repetition}


**.vector-recording = false
**.scalar-recording = false
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
**.routingRecorder.enabled = false
**.mobility.initFromDisplayString = false

############### IPv4 configurator config #################
**.networkConfiguratorModule = "configurator"
*.configurator.config = xmldoc("./demo.xml")



# Single Cell configuration
# 
# The cell has a number of simulated UEs loading the cell itself
[Config BgSingleCell]
network = simu5g.emulation.pimrc_extension.ExtClientServerExample
sim-time-limit = 2s
warmup-period = 0s
repeat = 1
num-rngs = 2

############### AMC parameters ################
**.amcType = "NRAmc"
**.pilotMode = ${cqiMode="AVG_CQI"}
**.targetBler = 0.01
**.blerShift = ${blerShift=5}  
**.fbPeriod = 40 

############### eNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 0
*.ue*.masterId = 0
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobilityType = "StationaryMobility"
*.ue*.mobility.initialX = 450m
*.ue*.mobility.initialY = 300m + ${dist=50m}

############### CA configuration ######################## 
*.carrierAggregation.numComponentCarriers = ${ca=1}
*.carrierAggregation.componentCarrier[0].numBands = ${rbs=25,50,100}
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0,1,2,3,4}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[1].carrierFrequency = 4GHz
*.carrierAggregation.componentCarrier[2].carrierFrequency = 6GHz
*.carrierAggregation.componentCarrier[3].carrierFrequency = 8GHz

*.gnb.cellularNic.numCarriers = ${ca}
*.gnb.cellularNic.channelModel[*].componentCarrierIndex = ancestorIndex(0)
*.ue.cellularNic.numNRCarriers = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.bkUe[*].cellularNic.numNRCarriers = 1
*.bkUe[*].cellularNic.nrChannelModel[*].componentCarrierIndex = ancestorIndex(2) % ${ca}   # distribute bkUes uniformly among CCs

############## background ues configuration ##################
*.numBkUEs = ${numBkUEs=0,100,200,300,400,500,600,700,800,900,1000}
*.bkUe[*].macCellId = 0
*.bkUe[*].masterId = 0
*.bkUe[*].nrMacCellId = 1
*.bkUe[*].nrMasterId = 1

# background ue position
*.bkUe[*].mobilityType = "StationaryMobility"
*.bkUe[*].mobility.initialX = uniform(150m,750m)
*.bkUe[*].mobility.initialY = uniform(0m,600m)

*.bkUe[*].mobility.rng-0 = 1

############# Traffic configuration #################
*.bkUe[*].numApps = 1
*.server.numApps = 1 + ${numBkUEs}

*.server.app[*].typename = "UdpEchoApp"
*.server.app[*].localPort = 5000+ancestorIndex(0)

*.ue.app[*].typename = "UdpBasicApp"
*.ue.app[*].destAddresses = "server" 
*.ue.app[*].destPort = 5000
*.ue.app[*].localPort = 6000
*.ue.app[*].startTime = uniform(0s,0.02s)
*.ue.app[*].messageLength = ${msgLen=1000B}
*.ue.app[*].sendInterval = ${sndInt=0.04s}

*.bkUe[*].app[*].typename = "UdpBasicApp"
*.bkUe[*].app[*].destAddresses = "server" 
*.bkUe[*].app[*].destPort = 5000+ancestorIndex(1)+1
*.bkUe[*].app[*].localPort = 6000+ancestorIndex(0)
*.bkUe[*].app[*].startTime = uniform(0s,0.02s)
*.bkUe[*].app[*].messageLength = ${msgLen}
*.bkUe[*].app[*].sendInterval = ${sndInt}

*.binder.printTrafficGeneratorConfig = true
*.fakeParameter = ${numBgCells=0}



#####################################################################################
# BgMulticellValidation-simulated
#
# This scenario is used as baseline for the multicell scenario with Background cells
# The network contains one central gNB, surrounded by three gNBs. Each gNB serves a 
# number of UEs (completely modeled) 
[Config BgMulticell]
sim-time-limit = 2s
warmup-period = 0s
repeat = 1
num-rngs = 2

*.numBgCells = ${numBgCells=3,6,9}
*.carrierAggregation.componentCarrier[0].numBands = ${rbs=100}
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0,2,4}


**.fading = false
**.shadowing = false
**.downlink_interference = true
**.uplink_interference = true
**.bgCell_interference = true

**.mobility.constraintAreaMaxX = 2500m
**.mobility.constraintAreaMaxY = 2500m
**.mobility.constraintAreaMinX = -500m
**.mobility.constraintAreaMinY = -500m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############## deployment #######################
*.gnb.mobility.initialX = 1000m
*.gnb.mobility.initialY = 1000m
*.ue.mobility.initialX = 1000m
*.ue.mobility.initialY = 1000m + ${dist=50m}

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue.macCellId = 0
*.ue.masterId = 0
*.ue.nrMacCellId = 1
*.ue.nrMasterId = 1

############### CA configuration ######################## 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u}
*.carrierAggregation.componentCarrier[0].numBands = ${rbs}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz

############### AMC parameters ################
**.amcType = "NRAmc"
**.pilotMode = ${cqiMode="AVG_CQI"}
**.targetBler = 0.01
**.blerShift = ${blerShift=5}  
**.fbPeriod = 40 





#####################################################################################
# BgMulticell-simulated
#
# This scenario is used as baseline for the multicell scenario with Background cells
# The network contains one central gNB, surrounded by three gNBs. Each gNB serves a 
# number of UEs (completely modeled) 
[Config BgMulticell-simulated]
network = simu5g.emulation.pimrc_extension.ExtClientServerMulticell
extends = BgMulticell


############### gNodeBs configuration #################
*.bgCell[0].mobility.initialX = 750m
*.bgCell[0].mobility.initialY = 567m
*.bgCell[1].mobility.initialX = 1500m
*.bgCell[1].mobility.initialY = 1000m
*.bgCell[2].mobility.initialX = 750m
*.bgCell[2].mobility.initialY = 1433m
*.bgCell[3].mobility.initialX = 1250m
*.bgCell[3].mobility.initialY = 567m
*.bgCell[4].mobility.initialX = 1250m
*.bgCell[4].mobility.initialY = 1433m
*.bgCell[5].mobility.initialX = 500m
*.bgCell[5].mobility.initialY = 1000m
*.bgCell[6].mobility.initialX = 500m
*.bgCell[6].mobility.initialY = 134m
*.bgCell[7].mobility.initialX = 2000m
*.bgCell[7].mobility.initialY = 1000m
*.bgCell[8].mobility.initialX = 500m
*.bgCell[8].mobility.initialY = 1866m

**.macCellId = 0
**.masterId = 0
*.bkUe[*].nrMacCellId = 1
*.bkUe[*].nrMasterId = 1
*.extBkUe0[*].nrMacCellId = 2
*.extBkUe0[*].nrMasterId = 2
*.extBkUe1[*].nrMacCellId = 3
*.extBkUe1[*].nrMasterId = 3
*.extBkUe2[*].nrMacCellId = 4
*.extBkUe2[*].nrMasterId = 4
*.extBkUe3[*].nrMacCellId = 5
*.extBkUe3[*].nrMasterId = 5
*.extBkUe4[*].nrMacCellId = 6
*.extBkUe4[*].nrMasterId = 6
*.extBkUe5[*].nrMacCellId = 7
*.extBkUe5[*].nrMasterId = 7
*.extBkUe6[*].nrMacCellId = 8
*.extBkUe6[*].nrMasterId = 8
*.extBkUe7[*].nrMacCellId = 9
*.extBkUe7[*].nrMasterId = 9
*.extBkUe8[*].nrMacCellId = 10
*.extBkUe8[*].nrMasterId = 10

*.numBkUEs = ${numBkUEs=3,6,9,12,15,18}
*.bkUe[*].mobility.initialX = uniform(750m,1250m)
*.bkUe[*].mobility.initialY = uniform(750m,1250m)
*.numExtBkUEs* = ${numBkUEs}
*.extBkUe0[*].mobility.initialX = uniform(500m,1000m)
*.extBkUe0[*].mobility.initialY = uniform(317m,817m)
*.extBkUe1[*].mobility.initialX = uniform(1250m,1750m)
*.extBkUe1[*].mobility.initialY = uniform(750m,1250m)
*.extBkUe2[*].mobility.initialX = uniform(500m,1000m)
*.extBkUe2[*].mobility.initialY = uniform(1183m,1933m)
*.extBkUe3[*].mobility.initialX = uniform(1000m,1500m)
*.extBkUe3[*].mobility.initialY = uniform(317m,817m)
*.extBkUe4[*].mobility.initialX = uniform(1000m,1500m)
*.extBkUe4[*].mobility.initialY = uniform(1183m,1933m)
*.extBkUe5[*].mobility.initialX = uniform(250m,750m)
*.extBkUe5[*].mobility.initialY = uniform(750m,1250m)
*.extBkUe6[*].mobility.initialX = uniform(250m,750m)
*.extBkUe6[*].mobility.initialY = uniform(-116m,384m)
*.extBkUe7[*].mobility.initialX = uniform(1750m,2250m)
*.extBkUe7[*].mobility.initialY = uniform(750m,1250m)
*.extBkUe8[*].mobility.initialX = uniform(250m,750m)
*.extBkUe8[*].mobility.initialY = uniform(1183m,1683m)

*.bkUe[*].mobility.rng-0 = 1
*.extBkUe*[*].mobility.rng-0 = 1

############# Traffic configuration #################

*.ue.numApps = 1
*.bkUe[*].numApps = 2
*.extBkUe?[*].numApps = 2
*.server.numApps = 1 + ${numBkUEs}
*.extServer?.numApps = ${numBkUEs}

*.serverUl.numApps = 1 + ${numBkUEs}
*.extServerUl?.numApps = ${numBkUEs}

# --- Observed traffic --- #
*.server.app[0].typename = "UdpEchoApp"
*.server.app[0].localPort = 5000
*.ue.app[0].typename = "UdpBasicApp"
*.ue.app[0].destAddresses = "server" 
*.ue.app[0].destPort = 5000+ancestorIndex(0)
*.ue.app[0].localPort = 6000+ancestorIndex(0)
*.ue.app[0].startTime = uniform(0s,0.5s)
*.ue.app[0].messageLength = ${msgLen}B
*.ue.app[0].sendInterval = ${sndInt}

# --- DL traffic configuration --- #
*.server.app[1..].typename = "CbrSender"
*.server.app[1..].localPort = 5000+ancestorIndex(0)
*.server.app[1..].destPort = 1000
*.server.app[1..].startTime = uniform(0s,0.5s)
*.server.app[1..].PacketSize = ${msgLen=1000}
*.server.app[1..].sampling_time = ${sndInt=40ms}
*.server.app[1..].destAddress = "bkUe["+string(ancestorIndex(0)-1)+"]"

*.extServer?.app[*].typename = "CbrSender"
*.extServer?.app[*].localPort = 5000+ancestorIndex(0)
*.extServer0.app[*].destAddress = "extBkUe0["+string(ancestorIndex(0))+"]"
*.extServer1.app[*].destAddress = "extBkUe1["+string(ancestorIndex(0))+"]"
*.extServer2.app[*].destAddress = "extBkUe2["+string(ancestorIndex(0))+"]"
*.extServer3.app[*].destAddress = "extBkUe3["+string(ancestorIndex(0))+"]"
*.extServer4.app[*].destAddress = "extBkUe4["+string(ancestorIndex(0))+"]"
*.extServer5.app[*].destAddress = "extBkUe5["+string(ancestorIndex(0))+"]"
*.extServer6.app[*].destAddress = "extBkUe6["+string(ancestorIndex(0))+"]"
*.extServer7.app[*].destAddress = "extBkUe7["+string(ancestorIndex(0))+"]"
*.extServer8.app[*].destAddress = "extBkUe8["+string(ancestorIndex(0))+"]"
*.extServer?.app[*].destPort = 1000
*.extServer?.app[*].startTime = uniform(0s,0.5s)
*.extServer?.app[*].PacketSize = ${msgLen}
*.extServer?.app[*].sampling_time = ${sndInt}

*.bkUe[*].app[0].typename = "CbrReceiver"
*.bkUe[*].app[0].localPort = 1000
*.extBkUe?[*].app[0].typename = "CbrReceiver"
*.extBkUe?[*].app[0].localPort = 1000


# --- UL traffic configuration --- #
*.bkUe[*].app[1].typename = "CbrSender"
*.bkUe[*].app[1].startTime = uniform(0s,0.5s)
*.bkUe[*].app[1].PacketSize = ${msgLen}
*.bkUe[*].app[1].sampling_time = ${sndInt}
*.bkUe[*].app[1].destAddress = "serverUl"
*.bkUe[*].app[1].destPort = 1001+ancestorIndex(1)

*.extBkUe?[*].app[1].typename = "CbrSender"
*.extBkUe?[*].app[1].localPort = 5000+ancestorIndex(0)
*.extBkUe0[*].app[1].destAddress = "extServerUl0"
*.extBkUe1[*].app[1].destAddress = "extServerUl1"
*.extBkUe2[*].app[1].destAddress = "extServerUl2"
*.extBkUe3[*].app[1].destAddress = "extServerUl3"
*.extBkUe4[*].app[1].destAddress = "extServerUl4"
*.extBkUe5[*].app[1].destAddress = "extServerUl5"
*.extBkUe6[*].app[1].destAddress = "extServerUl6"
*.extBkUe7[*].app[1].destAddress = "extServerUl7"
*.extBkUe8[*].app[1].destAddress = "extServerUl8"
*.extBkUe?[*].app[1].destPort = 1000+ancestorIndex(1)
*.extBkUe?[*].app[1].startTime = uniform(0s,0.5s)
*.extBkUe?[*].app[1].PacketSize = ${msgLen}
*.extBkUe?[*].app[1].sampling_time = ${sndInt}

*.serverUl.app[*].typename = "CbrReceiver"
*.serverUl.app[*].localPort = 1000+ancestorIndex(0)
*.extServerUl?.app[*].typename = "CbrReceiver"
*.extServerUl?.app[*].localPort = 1000+ancestorIndex(0)

*.binder.printTrafficGeneratorConfig = true

#------------------------------------#


