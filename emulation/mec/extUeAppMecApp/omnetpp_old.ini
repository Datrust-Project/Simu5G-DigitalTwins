[General]
scheduler-class = "inet::RealTimeScheduler"
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true
result-dir = 3car

##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 1
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
#**.sctp.**.scalar-recording = false
#**.sctp.**.vector-recording = false
#**.scalar-recording = true
#**.vector-recording = false
#**.routingRecorder.enabled = false



**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.eNodeB*.**.scalar-recording = true
**.eNodeB*.**.vector-recording = false

**.lteNic.**.scalar-recording = true
**.lteNic.**.vector-recording = false

**.pgw.**.scalar-recording = true
**.pgw.**.vector-recording = false


**.scalar-recording = false
**.vector-recording = true



##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 45s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = ${numBands=25}

*.*.lteNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.lteNic.numCarriers = 1
*.gNodeB1.lteNic.channelModel[0].componentCarrierIndex = 0
*.car.lteNic.numCarriers = 1
*.car.lteNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

*.car.mobility.initFromDisplayString = false
*.car.mobilityType = "LinearMobility"
*.car.mobility.updateInterval = 0.05s

*.gNodeB1.mobility.initFromDisplayString = true

**.numCars = 1
**.car.mobility.initialX = 180m
**.car.mobility.initialY = 50m
**.car.mobility.initialMovementHeading = 90deg
**.car.mobility.speed = 10mps

**.fcsMode = "computed"
**.crcMode = "computed"


**.car.masterId = 1    
**.car.macCellId = 1   
**.car.nrMasterId = 1
**.car.nrMacCellId = 1
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

**.hasRNISupport = false
##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

#------------UEWarningAlertApp---------------
*.car.numApps = 1
*.car.app[0].typename = "DeviceApp"
*.car.app[0].localPort = 4500
*.car.app[0].lcmProxyAddress = "lcmProxy"
*.car.app[0].lcmProxyPort = 1000

*.car.app[0].connectAddress = "lcmProxy"


#*.car.app[0].requiredRam = 10MB
#*.car.app[0].requiredDisk = 10MB
#*.car.app[0].requiredCpu = 0.01
#----------------------------------------

######################_ME Host Side_#####################
# resources available
*.meHost1.maxMEApps = 100												#max ME Apps to instantiate
*.meHost1.maxRam = 32GB													#max KBytes of Ram Space 
*.meHost1.maxDisk = 100TB												#max KBytes of Ram Space 
*.meHost1.maxCpuSpeed = 400000											#max percentage of CPU
#----------------------------------------


#-------REST Service:---------------

*.meHost1.mecPlatform.numMecServices = 1
*.meHost1.mecPlatform.mecService[0].typename = "LocationService"
*.meHost1.mecPlatform.mecService[0].localAddress = "meHost1.mecPlatform" #da cambiare!!
*.meHost1.mecPlatform.mecService[0].localPort = 10020

*.meHost1.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.meHost1.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.meHost1.mecPlatform.mecService[0].requestServiceTime = 20
*.meHost1.mecPlatform.mecService[0].subscriptionServiceTime = 11s

*.meHost1.mecPlatform.serviceRegistry.localAddress = "meHost1.mecPlatform" #da cambiare!!
*.meHost1.mecPlatform.serviceRegistry.localPort = 10021

*.meHost1.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.meHost1.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time


#### emulation support

*.meHost1.virtualisationInfrastructure.numExtEthInterfaces = 1
*.meHost1.virtualisationInfrastructure.extEth[0].typename = "ExtLowerEthernetInterface"
*.meHost1.virtualisationInfrastructure.extEth[0].device = "veth0"
*.meHost1.virtualisationInfrastructure.ipv4.forwarding = true


*.car.numEthInterfaces = 1
*.car.eth[0].typename = "ExtLowerEthernetInterface"
*.car.eth[0].device = "veth2"
*.car.extHostAddress = "192.168.3.2"
*.car.ipv4.forwarding = true



#-----LCM proxy
#*.lcmProxy.numExtEthInterfaces = 1
#*.lcmProxy.ipv4.routingTable.routingFile = "routing_wSocket/lcmProxy.mrt"
#*.lcmProxy.extEth[0].typename = "ExtLowerEthernetInterface"
#*.lcmProxy.extEth[0].device = "veth0"
#
#*.lcmProxy.ipv4.forwarding = true



# ME Host connected
# **.gNodeB*.meHost = "meHost1"

# ----------------------------------------------------------------------------- #

# ----------------------------------------------------------------------------- #
# Config "Test"
#
[Config Test]
network = lte.emulation.mec.extUeAppMecApp.MecExtApps

############## Routing configuration ##############
# configure routing tables of each network element. Each of them must include a route to the (real) client 
*.router.ipv4.routingTable.routingFile = "routing_wSocket/router.mrt"
*.natRouter.ipv4.routingTable.routingFile = "routing_wSocket/natRouter.mrt"
*.upf.ipv4.routingTable.routingFile = "routing_wSocket/upf.mrt"
*.gNodeB1.ipv4.routingTable.routingFile = "routing_wSocket/gnb.mrt"
*.car.ipv4.routingTable.routingFile = "routing_wSocket/ue.mrt"


############# NAT configuration #################
*.natRouter.ipv4.natTable.config = xml("<config> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.2.1' \
                                        srcAddress='10.0.3.2' destAddress='192.168.2.2'/> \
                                        <entry type='prerouting' \
                                        packetDataFilter='*Ipv4Header and destAddress=~10.0.3.2' \
                                        srcAddress='10.0.2.1' destAddress='192.168.3.2'/> \
                                     </config>")


*.meHost1.virtualisationInfrastructure.ipv4.routingTable.routingFile = "routing_wSocket/meHost1.mrt"
*.meHost1.mecPlatform.ipv4.routingTable.routingFile = "routing_wSocket/mecPlatform.mrt"
**.mecOrchestrator.mecHostList = "meHost1"
**.mecOrchestrator.mecApplicationPackageList = "WarningAlertApp"
**.meHost1.mecPlatformManager.mecOrchestrator = "mecOrchestrator"

